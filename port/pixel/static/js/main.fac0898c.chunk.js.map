{"version":3,"sources":["components/TaskOne.js","actions/userActions.js","actions/types.js","components/TaskTwo.js","actions/sliderActions.js","components/Main.js","reducers/userReducer.js","reducers/sliderReducer.js","reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["TaskOne","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","value","error","addTask","e","task","preventDefault","undefined","keys","trim","setState","errors","props","deleteTask","parseInt","currentTarget","id","handleChange","inherits","createClass","key","_this2","react_default","a","createElement","Grid","className","Row","Col","xs","md","FormGroup","controlId","onSubmit","ControlLabel","FormControl","type","placeholder","onChange","Feedback","Button","onClick","ListGroup","user","tasks","map","ListGroupItem","style","display","justifyContent","fontSize","React","Component","connect","payload","TaskTwo","sliderValue","milliseconds","currRate","tick","time","start","rate","timer","setInterval","stop","clearInterval","width","htmlFor","defaultValue","step","slider","max","min","defaultProps","getInitState","Main","src_components_TaskOne","src_components_TaskTwo","initialState","combineReducers","action","objectSpread","toConsumableArray","filter","i","_ref","store","createStore","reducers","Header","href","src","alt","target","App","es","App_Header","components_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fac0898c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTask, deleteTask } from \"../actions/userActions\";\r\n\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Row,\r\n  Col,\r\n  FormGroup,\r\n  FormControl,\r\n  ControlLabel,\r\n  ListGroup,\r\n  ListGroupItem\r\n} from \"react-bootstrap\";\r\n\r\nimport \"./TaskOne.css\";\r\n\r\nexport class TaskOne extends React.Component {\r\n  state = {\r\n    value: \"\",\r\n    error: \"\"\r\n  };\r\n\r\n  addTask = (e, task) => {\r\n    e.preventDefault();\r\n    const { value } = this.state;\r\n\r\n    if (\r\n      value === undefined ||\r\n      value === null ||\r\n      (typeof value === \"object\" && Object.keys(value).length === 0) ||\r\n      (typeof value === \"string\" && value.trim().length === 0)\r\n    )\r\n      this.setState({ errors: \"string in empty\" });\r\n    else {\r\n      this.props.addTask(value);\r\n      this.setState({ value: \"\", errors: \"\" });\r\n    }\r\n  };\r\n\r\n  deleteTask = e => {\r\n    e.preventDefault();\r\n    this.props.deleteTask(parseInt(e.currentTarget.id));\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ value: e.currentTarget.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Grid className=\"TaskOne\">\r\n          <Row className=\"show-grid TaskOne-Title\">Task #1</Row>\r\n          <Row className=\"show-grid\">\r\n            <Col xs={12} md={6}>\r\n              <FormGroup controlId=\"formBasicText\" onSubmit={this.onSubmit}>\r\n                <ControlLabel />\r\n                <FormControl\r\n                  type=\"text\"\r\n                  value={this.state.value}\r\n                  placeholder=\"Enter text\"\r\n                  onChange={this.handleChange}\r\n                />\r\n                <FormControl.Feedback />\r\n                <Button className=\"TaskOne-Add-Butt\" onClick={this.addTask}>\r\n                  Add text\r\n                </Button>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col xs={12} md={6}>\r\n              <div className=\"TaskOne-List\">List:</div>\r\n              <ListGroup>\r\n                {this.props.user.tasks < 0\r\n                  ? null\r\n                  : this.props.user.tasks.map((task, key) => {\r\n                      return (\r\n                        <ListGroupItem key={key}>\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"space-between\",\r\n                              fontSize: \"1.5em\"\r\n                            }}\r\n                          >\r\n                            {task}\r\n                            <Button id={key} onClick={this.deleteTask}>\r\n                              delete text\r\n                            </Button>\r\n                          </div>\r\n                        </ListGroupItem>\r\n                      );\r\n                    })}\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.user\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addTask, deleteTask }\r\n)(TaskOne);\r\n","import { ADD_TASK, DELETE_TASK } from \"./types\";\r\n\r\nexport const addTask = task => {\r\n  return {\r\n    type: ADD_TASK,\r\n    payload: task\r\n  };\r\n};\r\n\r\nexport const deleteTask = task => {\r\n  return {\r\n    type: DELETE_TASK,\r\n    payload: task\r\n  };\r\n};\r\n","export const ADD_TASK = \"ADD_TASK\";\nexport const DELETE_TASK = \"DELETE_TASK\";\n\nexport const GET_INIT_STATE = \"GET_INIT_STATE\";\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\nimport { getInitState } from \"../actions/sliderActions\";\r\n\r\nimport \"./TaskTwo.css\";\r\n\r\nexport class TaskTwo extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.timer = null;\r\n  }\r\n\r\n  static defaultProps = {\r\n    min: 0,\r\n    max: 5000,\r\n    value: 0\r\n  };\r\n\r\n  state = {\r\n    sliderValue: 0,\r\n    milliseconds: 0,\r\n    currRate: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.start(this.state.sliderValue);\r\n  }\r\n\r\n  tick = time => {\r\n    this.setState({ milliseconds: this.state.milliseconds + time });\r\n  };\r\n\r\n  start = rate => {\r\n    this.timer = setInterval(() => this.tick(rate), rate);\r\n  };\r\n\r\n  stop = () => {\r\n    clearInterval(this.timer);\r\n  };\r\n\r\n  onChange = e => {\r\n    e.preventDefault();\r\n    const { value } = e.currentTarget;\r\n    this.setState({ currRate: value });\r\n    this.stop();\r\n    this.start(parseInt(value));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Grid>\r\n          <Row className=\"show-grid TaskTwo-Title\">Task #2</Row>\r\n          <Row className=\"show-grid\">\r\n            <Col xs={12} md={6}>\r\n              <div className=\"containerInput\" style={{ width: \"100%\" }}>\r\n                <label htmlFor=\"customRange1\">Rate</label>\r\n                <input\r\n                  defaultValue={this.props.value}\r\n                  step={this.props.slider.step}\r\n                  max=\"5000\"\r\n                  type=\"range\"\r\n                  className=\"custom-range\"\r\n                  id=\"customRange1\"\r\n                  onChange={this.onChange}\r\n                />\r\n              </div>\r\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                <span>{this.props.min}</span>\r\n                <span>{this.props.max}</span>\r\n              </div>\r\n            </Col>\r\n            <Col xs={12} md={6}>\r\n              <span>Counter : {this.state.milliseconds} </span> <br />\r\n              <span> Current Rate : {this.state.currRate} </span>\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  slider: state.slider\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getInitState }\r\n)(TaskTwo);\r\n","import { GET_INIT_STATE } from \"./types\";\n\nexport const getInitState = payload => ({\n  type: GET_INIT_STATE\n});\n","import React, { Component } from \"react\";\r\n\r\nimport TaskOne from \"./TaskOne\";\r\nimport TaskTwo from \"./TaskTwo\";\r\n\r\nclass Main extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TaskOne />\r\n        <TaskTwo />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import { ADD_TASK, DELETE_TASK } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  tasks: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_TASK:\r\n      return {\r\n        ...state,\r\n        tasks: [...state.tasks, action.payload]\r\n      };\r\n    case DELETE_TASK:\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.filter((task, i) => i !== action.payload)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_INIT_STATE } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  step: 100\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_INIT_STATE:\r\n      return { ...state };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\nimport userReducer from \"./userReducer\";\nimport sliderReducer from \"./sliderReducer\";\n\nexport default combineReducers({\n  user: userReducer,\n  slider: sliderReducer\n});\n","import React, { Component } from \"react\";\nimport Main from \"./components/Main\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { Provider } from \"react-redux\";\nimport reducers from \"./reducers/index\";\nimport { createStore } from \"redux\";\n\nconst store = createStore(reducers);\n\nconst Header = () => {\n  return (\n    <nav className=\"navbar navbar-expand-sm  navbar-dark bg-dark\">\n      <a className=\"navbar-brand\" href=\"#\">\n        <img\n          width=\"100\"\n          src=\"https://image.ibb.co/k7cmVT/logo_w.png\"\n          alt=\"Logo\"\n        />\n      </a>\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item active\">\n            <a className=\"nav-link\" href=\".\">\n              Home link <span className=\"sr-only\">(current)</span>\n            </a>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"https://pixelplex.io\" target=\"_blank\">\n              Pixelplex link\n            </a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <Header />\n          <Main />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}